package hw4;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Scanner;

import javax.swing.JFrame;

import javax.swing.JComponent;

@SuppressWarnings("serial")

public class FunPaint {
	static class BadNumberException extends Exception {
		BadNumberException() {
		}

	}

	public static void draw(Graphics g) {
		Scanner in = new Scanner(System.in);
		boolean nonstop = true;
		try {
			while (nonstop) {
				try {
					System.out.println("Enter Grid Dimension:");
					int GridDimension = 6;
					GridDimension = in.nextInt();
					if (GridDimension % 2 == 1) {
						throw new BadNumberException();
					} else {
						for (int row = 0; row < GridDimension / 2; row++) {
							// set the color of small circles in the second quadrant to be green
							for (int column = 0; column < GridDimension / 2; column++) {
								g.setColor(Color.GREEN);
								g.fillOval(row * 60 + 50, column * 60 + 50, 50, 50);
							}
							for (int column = GridDimension / 2; column < GridDimension; column++) {// set the color of
																									// small circles in
																									// the
																									// first quadrant to
																									// be
																									// black
								g.setColor(Color.BLACK);
								g.fillOval(row * 60 + 50, column * 60 + 50, 50, 50);
							}

						}

						for (int row = GridDimension / 2; row < GridDimension; row++) {
							for (int column = 0; column < GridDimension / 2; column++) {// set the color of small
																						// circles in
																						// the third quadrant to be
																						// black
								g.setColor(Color.BLACK);
								g.fillOval(row * 60 + 50, column * 60 + 50, 50, 50);
							}
							for (int column = GridDimension / 2; column < GridDimension; column++) {// set the color of
																									// small circles in
																									// the
																									// fourth quadrant
																									// to be
																									// red
								g.setColor(Color.RED);
								g.fillOval(row * 60 + 50, column * 60 + 50, 50, 50);

							}

						}
						nonstop = false;

					}

				} catch (BadNumberException e) {
					System.out.println("Warning: Please enter an even number!");

				} catch (Exception e) {
					System.out.println("Warning: This is not a valid entry!\n" + "Please enter an even number!");
					in.next();
				}
				continue;
			}

		} finally {
			// close the scanner
			in.close();
		}
	}

	public static void main(String[] args) {
		JFrame frame = new JFrame();

		final int FRAME_WIDTH = 800;
		final int FRAME_HEIGHT = 800;

		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
		JComponent component = new JComponent() {
			public void paintComponent(Graphics graph) {
				try{draw(graph);
				}catch(Exception e) {System.out.println("RA");}
				
			
	}
		};frame.add(component);frame.setVisible(true);
}}
